/*
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

   Product name: redemption, a FLOSS RDP proxy
   Copyright (C) Wallix 2012-2013
   Author(s): Christophe Grosjean, Dominique Lafages

   header file. KeymapSym object for keymap translation from RDP to X (VNC)
*/

// +----+  +----+----+----+----+  +----+----+----+----+  +----+----+----+----+  +----+----+-------+
// | 01 |  | 3B | 3C | 3D | 3E |  | 3F | 40 | 41 | 42 |  | 43 | 44 | 57 | 58 |  | 37 | 46 | 1D+45 |
// +----+  +----+----+----+----+  +----+----+----+----+  +----+----+----+----+  +----+----+-------+
//                                     ***  keycodes suffixed by 'x' are extended ***
// +----+----+----+----+----+----+----+----+----+----+----+----+----+--------+  +----+----+----+  +--------------------+
// | 29 | 02 | 03 | 04 | 05 | 06 | 07 | 08 | 09 | 0A | 0B | 0C | 0D |   0E   |  | 52x| 47x| 49x|  | 45 | 35x| 37 | 4A  |
// +-------------------------------------------------------------------------+  +----+----+----+  +----+----+----+-----+
// |  0F  | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 1A | 1B |      |  | 53x| 4Fx| 51x|  | 47 | 48 | 49 |     |
// +------------------------------------------------------------------+  1C  |  +----+----+----+  +----+----+----| 4E  |
// |  3A   | 1E | 1F | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 2B |     |                    | 4B | 4C | 4D |     |
// +-------------------------------------------------------------------------+       +----+       +----+----+----+-----+
// |  2A | 56 | 2C | 2D | 2E | 2F | 30 | 31 | 32 | 33 | 34 | 35 |     36     |       | 48x|       | 4F | 50 | 51 |     |
// +-------------------------------------------------------------------------+  +----+----+----+  +---------+----| 1Cx |
// |  1D  |  5Bx | 38 |           39           |  38x  |  5Cx |  5Dx |  1Dx  |  | 4Bx| 50x| 4Dx|  |    52   | 53 |     |
// +------+------+----+------------------------+-------+------+------+-------+  +----+----+----+  +---------+----+-----+

void KeymapSym::init_layout_sym(int keyb)
{
    // %s/^[^"]*"[^"]*"[^"]*"\([^:]*\):.*$/\1/

    // Layouts below are using X scancodes

    // DEFAULT KEYMAP
    const KeyLayout_t DEFAULT_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2d,    0x3d,  KS_Bksp,  KS_Tab,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x3b,
        0x27,    0x60,  KS_Shift_L,    0x5c,    0x7a,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x2c,    0x2e,    0x2f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
    } ;

    const KeyLayout_t DEFAULT_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x40,    0x23,    0x24,    0x25,    0x5e,
        0x26,    0x2a,    0x28,    0x29,    0x5f,    0x2b,  KS_Bksp,  0xfe20,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,    0x7b,    0x7d,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x3a,
        0x22,    0x7e,  KS_Shift_L,    0x7c,    0x5a,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x3c,    0x3e,    0x3f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Meta_R,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
    } ;

    const KeyLayout_t DEFAULT_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2d,    0x3d,  KS_Bksp,  KS_Tab,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x3b,
        0x27,    0x60,  KS_Shift_L,    0x5c,    0x7a,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x2c,    0x2e,    0x2f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
    } ;

    const KeyLayout_t DEFAULT_capslock_sym = {                                              
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2d,    0x3d,  KS_Bksp,  KS_Tab,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x3b,
        0x27,    0x60,  KS_Shift_L,    0x5c,    0x5a,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x2c,    0x2e,    0x2f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
    } ;

    const KeyLayout_t DEFAULT_shiftcapslock_sym = {
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
            0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
    } ;

    // Intialize the WORK tables
    for(int i=0 ; i < 128 ; i++) {
        keylayout_WORK_noshift_sym[i] = DEFAULT_noshift_sym[i] ;
        keylayout_WORK_shift_sym[i] = DEFAULT_shift_sym[i] ;
        keylayout_WORK_altgr_sym[i] = DEFAULT_altgr_sym[i] ;
        keylayout_WORK_capslock_sym[i] = DEFAULT_capslock_sym[i] ;
        keylayout_WORK_shiftcapslock_sym[i] = DEFAULT_shiftcapslock_sym[i] ;
    }

    switch (keyb){

        case 0x0407: // GERMAN
        {
        const KeyLayout_t x0407_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0, // 00 - 07
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36, // 08 - 0F
        0x37,    0x38,    0x39,    0x30,    0xdf,  0xfe51,  KS_Bksp,  KS_Tab, // 10 - 17
        0x71,    0x77,    0x65,    0x72,    0x74,    0x7a,    0x75,    0x69, // 18 - 1F
        0x6f,    0x70,    0xfc,    0x2b,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73, // 20 - 27
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0xf6, // 28 - 2F
        0xe4,  0xfe52,  KS_Shift_L,    0x23,    0x79,    0x78,    0x63,    0x76, // 30 - 37
        0x62,    0x6e,    0x6d,    0x2c,    0x2e,    0x2d,  KS_Shift_R,  KS_KP_Mul, // 38 - 3F
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2, // 40 - 47
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95, // 48 - 4F
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c, // 50 - 57
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8, // 58 - 5F
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End, // 60 - 67
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print, // 68 - 6F
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0, // 70 - 77
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0, // 78 - 7F
        };
        const KeyLayout_t x0407_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0, // 00 - 07
        0x0,  KS_Esc,    0x21,    0x22,    0xa7,    0x24,    0x25,    0x26, // 08 - 0F
        0x2f,    0x28,    0x29,    0x3d,    0x3f,  0xfe50,  KS_Bksp,  0xfe20, // 10 - 17
        0x51,    0x57,    0x45,    0x52,    0x54,    0x5a,    0x55,    0x49, // 18 - 1F
        0x4f,    0x50,    0xdc,    0x2a,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53, // 20 - 27
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0xd6, // 28 - 2F
        0xc4,    0xb0,  KS_Shift_L,    0x27,    0x59,    0x58,    0x43,    0x56, // 30 - 37
        0x42,    0x4e,    0x4d,    0x3b,    0x3a,    0x5f,  KS_Shift_R,  KS_KP_Mul, // 38 - 3F
        0xffe7,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2, // 40 - 47
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7, // 48 - 4F
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1, // 50 - 57
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffac,     0x0,  0xff7e,    0x3e,  0xffc8, // 58 - 5F
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End, // 60 - 67
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print, // 68 - 6F
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0, // 70 - 77
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L, // 78 - 7F
        };
        const KeyLayout_t x0407_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0, // 00 - 07
        0x0,  KS_Esc,    0xb9,    0xb2,    0xb3,    0xbc,    0xbd,    0xac, // 08 - 0F
        0x7b,    0x5b,    0x5d,    0x7d,    0x5c,  0xfe5b,  KS_Bksp,  KS_Tab, // 10 - 17
        0x40,   0x1b3,  0x20ac,    0xb6,   0x3bc,   0x8fb,   0x8fe,   0x8fd, // 18 - 1F
        0xf8,    0xfe,  0xfe57,  0xfe53,  KS_Ret,  KS_Ctrl_L,    0xe6,    0xdf, // 20 - 27
        0xf0,   0x1f0,   0x3bf,   0x2b1,    0x6a,   0x3a2,   0x1b3,  0xfe59, // 28 - 2F
        0xfe52,    0xac,  KS_Shift_L,  0xfe50,    0xab,    0xbb,    0xa2,   0xad2, // 30 - 37
        0xad3,    0x6e,    0xb5,   0x8a3,    0xb7,  0xfe60,  KS_Shift_R,  KS_KP_Mul, // 38 - 3F
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2, // 40 - 47
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95, // 48 - 4F
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c, // 50 - 57
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x7c,  0xffc8, // 58 - 5F
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End, // 60 - 67
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0, // 68 - 6F
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0, // 70 - 77
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0, // 78 - 7F
        };
        const KeyLayout_t x0407_capslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0, // 00 - 07
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36, // 08 - 0F
        0x37,    0x38,    0x39,    0x30,    0xdf,  0xfe51,  KS_Bksp,  KS_Tab, // 10 - 17
        0x51,    0x57,    0x45,    0x52,    0x54,    0x5a,    0x55,    0x49, // 18 - 1F
        0x4f,    0x50,    0xdc,    0x2b,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53, // 20 - 27
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0xd6, // 28 - 2F
        0xc4,  0xfe52,  KS_Shift_L,    0x23,    0x59,    0x58,    0x43,    0x56, // 30 - 37
        0x42,    0x4e,    0x4d,    0x2c,    0x2e,    0x2d,  KS_Shift_R,  KS_KP_Mul, // 38 - 3F
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2, // 40 - 47
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95, // 48 - 4F
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c, // 50 - 57
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8, // 58 - 5F
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End, // 60 - 67
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print, // 68 - 6F
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0, // 70 - 77
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0, // 78 - 7F
        };
        const KeyLayout_t x0407_shiftcapslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0, // 00 - 07
        0x0,  KS_Esc,    0x21,    0x22,    0xa7,    0x24,    0x25,    0x26, // 08 - 0F
        0x2f,    0x28,    0x29,    0x3d,    0x3f,  0xfe50,  KS_Bksp,  0xfe20, // 10 - 17
        0x71,    0x77,    0x65,    0x72,    0x74,    0x7a,    0x75,    0x69, // 18 - 1F
        0x6f,    0x70,    0xfc,    0x2a,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73, // 20 - 27
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0xf6, // 28 - 2F
        0xe4,    0xb0,  KS_Shift_L,    0x27,    0x79,    0x78,    0x63,    0x76, // 30 - 37
        0x62,    0x6e,    0x6d,    0x3b,    0x3a,    0x5f,  KS_Shift_R,  KS_KP_Mul, // 38 - 3F
        0xffe7,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2, // 40 - 47
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7, // 48 - 4F
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1, // 50 - 57
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffac,     0x0,  0xff7e,    0x3e,  0xffc8, // 58 - 5F
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End, // 60 - 67
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print, // 68 - 6F
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0, // 70 - 77
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L, // 78 - 7F
        };

                for(size_t i = 0 ; i < 128 ; i++) {
                    if (x0407_noshift_sym[i]){
                        keylayout_WORK_noshift_sym[i] = x0407_noshift_sym[i] ;
                    }
                    if (x0407_shift_sym[i]){
                        keylayout_WORK_shift_sym[i] = x0407_shift_sym[i] ;
                    }
                    if (x0407_altgr_sym[i]){
                        keylayout_WORK_altgr_sym[i] = x0407_altgr_sym[i] ;
                    }
                    if (x0407_capslock_sym[i]){
                        keylayout_WORK_capslock_sym[i] = x0407_capslock_sym[i] ;
                    }
                    if (x0407_shiftcapslock_sym[i]){
                        keylayout_WORK_shiftcapslock_sym[i] = x0407_shiftcapslock_sym[i] ;
                    }
                }
            }
            break;

        case 0x0409: // United States
        {
        const KeyLayout_t x0409_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2d,    0x3d,  KS_Bksp,  KS_Tab,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x3b,
        0x27,    0x60,  KS_Shift_L,    0x5c,    0x7a,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x2c,    0x2e,    0x2f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0409_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x40,    0x23,    0x24,    0x25,    0x5e,
        0x26,    0x2a,    0x28,    0x29,    0x5f,    0x2b,  KS_Bksp,  0xfe20,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,    0x7b,    0x7d,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x3a,
        0x22,    0x7e,  KS_Shift_L,    0x7c,    0x5a,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x3c,    0x3e,    0x3f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Meta_R,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };
        const KeyLayout_t x0409_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2d,    0x3d,  KS_Bksp,  KS_Tab,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x3b,
        0x27,    0x60,  KS_Shift_L,    0x5c,    0x7a,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x2c,    0x2e,    0x2f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0409_capslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2d,    0x3d,  KS_Bksp,  KS_Tab,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x3b,
        0x27,    0x60,  KS_Shift_L,    0x5c,    0x5a,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x2c,    0x2e,    0x2f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0409_shiftcapslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x40,    0x23,    0x24,    0x25,    0x5e,
        0x26,    0x2a,    0x28,    0x29,    0x5f,    0x2b,  KS_Bksp,  0xfe20,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,    0x7b,    0x7d,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x3a,
        0x22,    0x7e,  KS_Shift_L,    0x7c,    0x7a,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x3c,    0x3e,    0x3f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xffe8,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };

                for(size_t i = 0 ; i < 128 ; i++) {
                    if (x0409_noshift_sym[i]){
                        keylayout_WORK_noshift_sym[i] = x0409_noshift_sym[i] ;
                    }
                    if (x0409_shift_sym[i]){
                        keylayout_WORK_shift_sym[i] = x0409_shift_sym[i] ;
                    }
                    if (x0409_altgr_sym[i]){
                        keylayout_WORK_altgr_sym[i] = x0409_altgr_sym[i] ;
                    }
                    if (x0409_capslock_sym[i]){
                        keylayout_WORK_capslock_sym[i] = x0409_capslock_sym[i] ;
                    }
                    if (x0409_shiftcapslock_sym[i]){
                        keylayout_WORK_shiftcapslock_sym[i] = x0409_shiftcapslock_sym[i] ;
                    }
                }
            }
            break;

        case 0x040c: // French
        {
        
        const KeyLayout_t x040c_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0, // 00 - 07
        0x0,  KS_Esc,    0x26,    0xe9,    0x22,    0x27,    0x28,    0x2d, // 08 - 0F
        0xe8,    0x5f,    0xe7,    0xe0,    0x29,    0x3d,  KS_Bksp,  KS_Tab, // 10 - 17
        0x61,    0x7a,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69, // 18 - 1F
        0x6f,    0x70,  0xfe52,    0x24,  KS_Ret,  KS_Ctrl_L,    0x71,    0x73, // 20 - 27
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x6d, // 28 - 2F
        0xf9,    0xb2,  KS_Shift_L,    0x2a,    0x77,    0x78,    0x63,    0x76, // 30 - 37
        0x62,    0x6e,    0x2c,    0x3b,    0x3a,    0x21,  KS_Shift_R,  KS_KP_Mul, // 38 - 3F
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2, // 40 - 47
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95, // 48 - 4F
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c, // 50 - 57
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8, // 58 - 5F
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End, // 60 - 67
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print, // 68 - 6F
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0, // 70 - 77
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0, // 78 - 7F
        };
        const KeyLayout_t x040c_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0, //
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0xb0,    0x2b,  KS_Bksp,  0xfe20,
        0x41,    0x5a,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,  0xfe57,    0xa3,  KS_Ret,  KS_Ctrl_L,    0x51,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x4d,
        0x25,    0x7e,  KS_Shift_L,    0xb5,    0x57,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x3f,    0x2e,    0x2f,    0xa7,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,   //  60 - 67
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,   // 68 - 6F
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,   // 70 - 77
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,  // 78 - 7F
        };
        const KeyLayout_t x040c_capslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x26,    0xc9,    0x22,    0x27,    0x28,    0x2d,
        0xc8,    0x5f,    0xc7,    0xc0,    0x29,    0x3d,  KS_Bksp,  KS_Tab,
        0x41,    0x5a,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,  0xfe52,    0x24,  KS_Ret,  KS_Ctrl_L,    0x51,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x4d,
        0xd9,    0xb2,  KS_Shift_L,    0x2a,    0x57,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x2c,    0x3b,    0x3a,    0x21,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x040c_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0xb9,    0x7e,    0x23,    0x7b,    0x5b,    0x7c,
        0x60,    0x5c,    0x5e,    0x40,    0x5d,    0x7d,  KS_Bksp,  KS_Tab,
        0xe6,    0xab,  0x65,    0xb6,   0x3bc,   0x8fb,   0x8fe,   0x8fd,
        0xf8,    0xfe,  0xfe57,    0xa4,  KS_Ret,  KS_Ctrl_L,    0x40,    0xdf,
        0xf0,   0x1f0,   0x3bf,   0x2b1,    0x6a,   0x3a2,   0x1b3,    0xb5,
        0xfe52,    0xac,  KS_Shift_L,  0xfe50,   0x1b3,    0xbb,    0xa2,   0xad2,
        0xad3,    0x6e,  0xfe51,   0x8a3,    0xb7,  0xfe60,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x040c_shiftcapslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0xb0,    0x2b,  KS_Bksp,  0xfe20,
        0x61,    0x7a,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,  0xfe57,    0xa3,  KS_Ret,  KS_Ctrl_L,    0x71,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x6d,
        0x25,    0x7e,  KS_Shift_L,   0x39c,    0x77,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x3f,    0x2e,    0x2f,    0xa7,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };

                for(size_t i = 0 ; i < 128 ; i++) {
                    if (x040c_noshift_sym[i]){
                        keylayout_WORK_noshift_sym[i] = x040c_noshift_sym[i] ;
                    }
                    if (x040c_shift_sym[i]){
                        keylayout_WORK_shift_sym[i] = x040c_shift_sym[i] ;
                    }
                    if (x040c_altgr_sym[i]){
                        keylayout_WORK_altgr_sym[i] = x040c_altgr_sym[i] ;
                    }
                    if (x040c_capslock_sym[i]){
                        keylayout_WORK_capslock_sym[i] = x040c_capslock_sym[i] ;
                    }
                    if (x040c_shiftcapslock_sym[i]){
                        keylayout_WORK_shiftcapslock_sym[i] = x040c_shiftcapslock_sym[i] ;
                    }
                }
            }
            break;

        case 0x0410: // Italian
        {
        const KeyLayout_t x0410_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x27,    0xec,  KS_Bksp,  KS_Tab,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,    0xe8,    0x2b,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0xf2,
        0xe0,    0x5c,  KS_Shift_L,    0xf9,    0x7a,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x2c,    0x2e,    0x2d,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0410_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x22,    0xa3,    0x24,    0x25,    0x26,
        0x2f,    0x28,    0x29,    0x3d,    0x3f,    0x5e,  KS_Bksp,  0xfe20,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,    0xe9,    0x2a,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0xe7,
        0xb0,    0x7c,  KS_Shift_L,    0xa7,    0x5a,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x3b,    0x3a,    0x5f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };
        const KeyLayout_t x0410_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0xb9,    0xb2,    0xb3,    0xbc,    0xbd,    0xac,
        0x7b,    0x5b,    0x5d,    0x7d,    0x60,    0x7e,  KS_Bksp,  KS_Tab,
        0x40,   0x1b3,  0x20ac,    0xb6,   0x3bc,   0x8fb,   0x8fe,   0x8fd,
        0xf8,    0xfe,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0xe6,    0xdf,
        0xf0,   0x1f0,   0x3bf,   0x2b1,    0x6a,   0x3a2,   0x1b3,    0x40,
        0x23,    0xac,  KS_Shift_L,  0xfe50,    0xab,    0xbb,    0xa2,   0xad2,
        0xad3,    0xf1,    0xb5,  0xfe51,    0xb7,  0xfe54,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0xab,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0410_capslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x27,    0xcc,  KS_Bksp,  KS_Tab,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,    0xc8,    0x2b,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0xd2,
        0xc0,    0x5c,  KS_Shift_L,    0xd9,    0x5a,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x2c,    0x2e,    0x2d,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0410_shiftcapslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x22,    0xa3,    0x24,    0x25,    0x26,
        0x2f,    0x28,    0x29,    0x3d,    0x3f,    0x5e,  KS_Bksp,  0xfe20,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,    0xc9,    0x2a,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0xc7,
        0xb0,    0x7c,  KS_Shift_L,    0xa7,    0x7a,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x3b,    0x3a,    0x5f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };

                for(size_t i = 0 ; i < 128 ; i++) {
                    if (x0410_noshift_sym[i]){
                        keylayout_WORK_noshift_sym[i] = x0410_noshift_sym[i] ;
                    }
                    if (x0410_shift_sym[i]){
                        keylayout_WORK_shift_sym[i] = x0410_shift_sym[i] ;
                    }
                    if (x0410_altgr_sym[i]){
                        keylayout_WORK_altgr_sym[i] = x0410_altgr_sym[i] ;
                    }
                    if (x0410_capslock_sym[i]){
                        keylayout_WORK_capslock_sym[i] = x0410_capslock_sym[i] ;
                    }
                    if (x0410_shiftcapslock_sym[i]){
                        keylayout_WORK_shiftcapslock_sym[i] = x0410_shiftcapslock_sym[i] ;
                    }
                }
            }
            break;

        case 0x0419: // Russian
        {
        const KeyLayout_t x0419_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2d,    0x3d,  KS_Bksp,  KS_Tab,
        0x6ca,   0x6c3,   0x6d5,   0x6cb,   0x6c5,   0x6ce,   0x6c7,   0x6db,
        0x6dd,   0x6da,   0x6c8,   0x6df,  KS_Ret,  KS_Ctrl_L,   0x6c6,   0x6d9,
        0x6d7,   0x6c1,   0x6d0,   0x6d2,   0x6cf,   0x6cc,   0x6c4,   0x6d6,
        0x6dc,   0x6a3,  KS_Shift_L,    0x5c,   0x6d1,   0x6de,   0x6d3,   0x6cd,
        0x6c9,   0x6d4,   0x6d8,   0x6c2,   0x6c0,    0x2f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x2f,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0419_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x22,    0x23,    0x2a,    0x3a,    0x2c,
        0x2e,    0x3b,    0x28,    0x29,    0x5f,    0x2b,  KS_Bksp,  0xfe20,
        0x6ea,   0x6e3,   0x6f5,   0x6eb,   0x6e5,   0x6ee,   0x6e7,   0x6fb,
        0x6fd,   0x6fa,   0x6e8,   0x6ff,  KS_Ret,  KS_Ctrl_L,   0x6e6,   0x6f9,
        0x6f7,   0x6e1,   0x6f0,   0x6f2,   0x6ef,   0x6ec,   0x6e4,   0x6f6,
        0x6fc,   0x6b3,  KS_Shift_L,    0x7c,   0x6f1,   0x6fe,   0x6f3,   0x6ed,
        0x6e9,   0x6f4,   0x6f8,   0x6e2,   0x6e0,    0x3f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffac,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xffe8,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };
        const KeyLayout_t x0419_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2d,    0x3d,  KS_Bksp,  KS_Tab,
        0x6ca,   0x6c3,   0x6d5,   0x6cb,   0x6c5,   0x6ce,   0x6c7,   0x6db,
        0x6dd,   0x6da,   0x6c8,   0x6df,  KS_Ret,  KS_Ctrl_L,   0x6c6,   0x6d9,
        0x6d7,   0x6c1,   0x6d0,   0x6d2,   0x6cf,   0x6cc,   0x6c4,   0x6d6,
        0x6dc,   0x6a3,  KS_Shift_L,    0x5c,   0x6d1,   0x6de,   0x6d3,   0x6cd,
        0x6c9,   0x6d4,   0x6d8,   0x6c2,   0x6c0,    0x2f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0419_capslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2d,    0x3d,  KS_Bksp,  KS_Tab,
        0x6ea,   0x6e3,   0x6f5,   0x6eb,   0x6e5,   0x6ee,   0x6e7,   0x6fb,
        0x6fd,   0x6fa,   0x6e8,   0x6ff,  KS_Ret,  KS_Ctrl_L,   0x6e6,   0x6f9,
        0x6f7,   0x6e1,   0x6f0,   0x6f2,   0x6ef,   0x6ec,   0x6e4,   0x6f6,
        0x6fc,   0x6b3,  KS_Shift_L,    0x5c,   0x6f1,   0x6fe,   0x6f3,   0x6ed,
        0x6e9,   0x6f4,   0x6f8,   0x6e2,   0x6e0,    0x2f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x2f,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0419_shiftcapslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x22,    0x23,    0x2a,    0x3a,    0x2c,
        0x2e,    0x3b,    0x28,    0x29,    0x5f,    0x2b,  KS_Bksp,  0xfe20,
        0x6ca,   0x6c3,   0x6d5,   0x6cb,   0x6c5,   0x6ce,   0x6c7,   0x6db,
        0x6dd,   0x6da,   0x6c8,   0x6df,  KS_Ret,  KS_Ctrl_L,   0x6c6,   0x6d9,
        0x6d7,   0x6c1,   0x6d0,   0x6d2,   0x6cf,   0x6cc,   0x6c4,   0x6d6,
        0x6dc,   0x6a3,  KS_Shift_L,    0x7c,   0x6d1,   0x6de,   0x6d3,   0x6cd,
        0x6c9,   0x6d4,   0x6d8,   0x6c2,   0x6c0,    0x3f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffac,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xffe8,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };

                for(size_t i = 0 ; i < 128 ; i++) {
                    if (x0419_noshift_sym[i]){
                        keylayout_WORK_noshift_sym[i] = x0419_noshift_sym[i] ;
                    }
                    if (x0419_shift_sym[i]){
                        keylayout_WORK_shift_sym[i] = x0419_shift_sym[i] ;
                    }
                    if (x0419_altgr_sym[i]){
                        keylayout_WORK_altgr_sym[i] = x0419_altgr_sym[i] ;
                    }
                    if (x0419_capslock_sym[i]){
                        keylayout_WORK_capslock_sym[i] = x0419_capslock_sym[i] ;
                    }
                    if (x0419_shiftcapslock_sym[i]){
                        keylayout_WORK_shiftcapslock_sym[i] = x0419_shiftcapslock_sym[i] ;
                    }
                }
            }
            break;

        case 0x041d: // Swedish
        {
        const KeyLayout_t x041d_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2b,  0xfe51,  KS_Bksp,  KS_Tab,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,    0xe5,  0xfe57,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0xf6,
        0xe4,    0xa7,  KS_Shift_L,    0x27,    0x7a,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x2c,    0x2e,    0x2d,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x041d_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x22,    0x23,    0xa4,    0x25,    0x26,
        0x2f,    0x28,    0x29,    0x3d,    0x3f,  0xfe50,  KS_Bksp,  0xfe20,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,    0xc5,  0xfe52,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0xd6,
        0xc4,    0xbd,  KS_Shift_L,    0x2a,    0x5a,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x3b,    0x3a,    0x5f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffac,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };
        const KeyLayout_t x041d_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0xa1,    0x40,    0xa3,    0x24,  0x20ac,    0xa5,
        0x7b,    0x5b,    0x5d,    0x7d,    0x5c,    0xb1,  KS_Bksp,  KS_Tab,
        0x40,   0x1b3,  0x20ac,    0xae,    0xfe,   0x8fb,   0x8fe,   0x8fd,
        0x13bd,    0xfe,  0xfe57,  0xfe53,  KS_Ret,  KS_Ctrl_L,    0xaa,    0xdf,
        0xf0,   0x1f0,   0x3bf,   0x2b1,    0x6a,   0x3a2,   0x1b3,    0xf8,
        0xe6,    0xb6,  KS_Shift_L,    0xb4,    0xab,    0xbb,    0xa9,   0xad2,
        0xad3,    0x6e,    0xb5,  0xfe5b,    0xb7,  0xfe60,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x041d_capslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2b,  0xfe51,  KS_Bksp,  KS_Tab,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,    0xc5,  0xfe57,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0xd6,
        0xc4,    0xa7,  KS_Shift_L,    0x27,    0x5a,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x2c,    0x2e,    0x2d,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x041d_shiftcapslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x22,    0x23,    0xa4,    0x25,    0x26,
        0x2f,    0x28,    0x29,    0x3d,    0x3f,  0xfe50,  KS_Bksp,  0xfe20,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,    0xe5,  0xfe52,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0xf6,
        0xe4,    0xbd,  KS_Shift_L,    0x2a,    0x7a,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x3b,    0x3a,    0x5f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffac,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };

                for(size_t i = 0 ; i < 128 ; i++) {
                    if (x041d_noshift_sym[i]){
                        keylayout_WORK_noshift_sym[i] = x041d_noshift_sym[i] ;
                    }
                    if (x041d_shift_sym[i]){
                        keylayout_WORK_shift_sym[i] = x041d_shift_sym[i] ;
                    }
                    if (x041d_altgr_sym[i]){
                        keylayout_WORK_altgr_sym[i] = x041d_altgr_sym[i] ;
                    }
                    if (x041d_capslock_sym[i]){
                        keylayout_WORK_capslock_sym[i] = x041d_capslock_sym[i] ;
                    }
                    if (x041d_shiftcapslock_sym[i]){
                        keylayout_WORK_shiftcapslock_sym[i] = x041d_shiftcapslock_sym[i] ;
                    }
                }
            }
            break;

        case 0x046e: // Luxemburgish
        {
        const KeyLayout_t x046e_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x27,    0x5e,  KS_Bksp,  KS_Tab,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x7a,    0x75,    0x69,
        0x6f,    0x70,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0xf6,
        0xe4,    0x5f,  KS_Shift_L,    0x24,    0x79,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x2c,    0x2e,    0x2d,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x046e_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x2b,    0x22,    0x2a,     0x0,    0x25,    0x26,
        0x2f,    0x28,    0x29,    0x3d,    0x3f,    0x60,  KS_Bksp,  0xfe20,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x5a,    0x55,    0x49,
        0x4f,    0x50,    0x7b,    0x21,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x3a,
        0x22,     0x0,     0x0,    0x23,    0x5a,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x3b,    0x3a,    0x5f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffac,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };
        const KeyLayout_t x046e_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x7e,    0x23,    0x7b,    0x5b,    0x7c,    0x60,
        0x5c,    0x5e,    0x40,    0x5d,    0x7d,    0x3d,  KS_Bksp,  KS_Tab,
        0x40,   0x1b3,  0x20ac,    0xb6,   0x3bc,   0x8fb,   0x8fe,   0x8fd,
        0xf8,    0xfe,  0xfe57,  0xfe53,  KS_Ret,  KS_Ctrl_L,    0xe6,    0xdf,
        0xf0,   0x1f0,   0x3bf,   0x2b1,    0x6a,   0x3a2,   0x1b3,  0xfe59,
        0xfe52,    0xac,  KS_Shift_L,    0x5c,    0xab,    0xbb,    0xa2,   0xad2,
        0xad3,    0x6e,    0xb5,   0x8a3,    0xb7,  0xfe60,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
       const KeyLayout_t x046e_capslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0xdf,  0xfe51,  KS_Bksp,  KS_Tab,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x5a,    0x55,    0x49,
        0x4f,    0x50,    0xdc,    0x2b,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0xd6,
        0xc4,  0xfe52,  KS_Shift_L,    0x23,    0x59,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x2c,    0x2e,    0x2d,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x046e_shiftcapslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x22,    0xa7,    0x24,    0x25,    0x26,
        0x2f,    0x28,    0x29,    0x3d,    0x3f,  0xfe50,  KS_Bksp,  0xfe20,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x7a,    0x75,    0x69,
        0x6f,    0x70,    0xfc,    0x2a,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0xf6,
        0xe4,    0xb0,  KS_Shift_L,    0x27,    0x79,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x3b,    0x3a,    0x5f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffac,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };

                for(size_t i = 0 ; i < 128 ; i++) {
                    if (x046e_noshift_sym[i]){
                        keylayout_WORK_noshift_sym[i] = x046e_noshift_sym[i] ;
                    }
                    if (x046e_shift_sym[i]){
                        keylayout_WORK_shift_sym[i] = x046e_shift_sym[i] ;
                    }
                    if (x046e_altgr_sym[i]){
                        keylayout_WORK_altgr_sym[i] = x046e_altgr_sym[i] ;
                    }
                    if (x046e_capslock_sym[i]){
                        keylayout_WORK_capslock_sym[i] = x046e_capslock_sym[i] ;
                    }
                    if (x046e_shiftcapslock_sym[i]){
                        keylayout_WORK_shiftcapslock_sym[i] = x046e_shiftcapslock_sym[i] ;
                    }
                }
            }
            break;

        case 0x0807: // German Swizerland
        {
        const KeyLayout_t x0807_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0xdf,  0xfe51,  KS_Bksp,  KS_Tab,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x7a,    0x75,    0x69,
        0x6f,    0x70,    0xfc,    0x2b,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0xf6,
        0xe4,  0xfe52,  KS_Shift_L,    0x23,    0x79,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x2c,    0x2e,    0x2d,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0807_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x22,    0xa7,    0x24,    0x25,    0x26,
        0x2f,    0x28,    0x29,    0x3d,    0x3f,  0xfe50,  KS_Bksp,  0xfe20,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x5a,    0x55,    0x49,
        0x4f,    0x50,    0xdc,    0x2a,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0xd6,
        0xc4,    0xb0,  KS_Shift_L,    0x27,    0x59,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x3b,    0x3a,    0x5f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffac,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };
        const KeyLayout_t x0807_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x7c,    0x40,    0x23,     0x0,     0x0,     0x0,
        0x7c,     0x0,     0x0,    0x5d,    0x60,    0x7e,  KS_Bksp,  KS_Tab,
        0x40,   0x1b3,  0x20ac,    0xb6,   0x3bc,   0x8fb,   0x8fe,   0x8fd,
        0x5b,    0x5b,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0xe6,    0xdf,
        0xf0,   0x1f0,   0x3bf,   0x2b1,    0x6a,   0x3a2,   0x1b3,  0xfe59,
        0x7b,    0xac,  KS_Shift_L,    0x7d,    0xab,    0xbb,    0xa2,   0xad2,
        0xad3,    0x6e,    0xb5,   0x8a3,    0xb7,  0xfe60,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0807_capslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0xdf,  0xfe51,  KS_Bksp,  KS_Tab,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x5a,    0x55,    0x49,
        0x4f,    0x50,    0xdc,    0x2b,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0xd6,
        0xc4,  0xfe52,  KS_Shift_L,    0x23,    0x59,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x2c,    0x2e,    0x2d,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0807_shiftcapslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x22,    0xa7,    0x24,    0x25,    0x26,
        0x2f,    0x28,    0x29,    0x3d,    0x3f,  0xfe50,  KS_Bksp,  0xfe20,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x7a,    0x75,    0x69,
        0x6f,    0x70,    0xfc,    0x2a,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0xf6,
        0xe4,    0xb0,  KS_Shift_L,    0x27,    0x79,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x3b,    0x3a,    0x5f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffac,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };

                for(size_t i = 0 ; i < 128 ; i++) {
                    if (x0807_noshift_sym[i]){
                        keylayout_WORK_noshift_sym[i] = x0807_noshift_sym[i] ;
                    }
                    if (x0807_shift_sym[i]){
                        keylayout_WORK_shift_sym[i] = x0807_shift_sym[i] ;
                    }
                    if (x0807_altgr_sym[i]){
                        keylayout_WORK_altgr_sym[i] = x0807_altgr_sym[i] ;
                    }
                    if (x0807_capslock_sym[i]){
                        keylayout_WORK_capslock_sym[i] = x0807_capslock_sym[i] ;
                    }
                    if (x0807_shiftcapslock_sym[i]){
                        keylayout_WORK_shiftcapslock_sym[i] = x0807_shiftcapslock_sym[i] ;
                    }
                }
            }
            break;

        case 0x0809: // English UK
        {
        const KeyLayout_t x0809_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2d,    0x3d,  KS_Bksp,  KS_Tab,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x3b,
        0x27,    0x60,  KS_Shift_L,    0x23,    0x7a,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x2c,    0x2e,    0x2f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x5c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0809_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x22,    0xa3,    0x24,    0x25,    0x5e,
        0x26,    0x2a,    0x28,    0x29,    0x5f,    0x2b,  KS_Bksp,  0xfe20,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,    0x7b,    0x7d,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x3a,
        0x40,    0x7e,  KS_Shift_L,  0xfe53,    0x5a,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x3c,    0x3e,    0x3f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xffe8,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };
        const KeyLayout_t x0809_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,  0x20ac,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2d,    0x3d,  KS_Bksp,  KS_Tab,
        0x71,    0x77,    0xe9,    0x72,    0x74,    0x79,    0xfa,    0xed,
        0xf3,    0x70,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0xe1,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x3b,
        0x27,    0xa6,  KS_Shift_L,    0x5c,    0x7a,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x2c,    0x2e,    0x2f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0809_capslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x2d,    0x3d,  KS_Bksp,  KS_Tab,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x3b,
        0x27,    0x60,  KS_Shift_L,    0x23,    0x5a,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x2c,    0x2e,    0x2f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x5c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0809_shiftcapslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x22,    0xa3,    0x24,    0x25,    0x5e,
        0x26,    0x2a,    0x28,    0x29,    0x5f,    0x2b,  KS_Bksp,  0xfe20,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,    0x7b,    0x7d,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x3a,
        0x40,    0x7e,  KS_Shift_L,  0xfe53,    0x7a,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x3c,    0x3e,    0x3f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xffe8,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };

                for(size_t i = 0 ; i < 128 ; i++) {
                    if (x0809_noshift_sym[i]){
                        keylayout_WORK_noshift_sym[i] = x0809_noshift_sym[i] ;
                    }
                    if (x0809_shift_sym[i]){
                        keylayout_WORK_shift_sym[i] = x0809_shift_sym[i] ;
                    }
                    if (x0809_altgr_sym[i]){
                        keylayout_WORK_altgr_sym[i] = x0809_altgr_sym[i] ;
                    }
                    if (x0809_capslock_sym[i]){
                        keylayout_WORK_capslock_sym[i] = x0809_capslock_sym[i] ;
                    }
                    if (x0809_shiftcapslock_sym[i]){
                        keylayout_WORK_shiftcapslock_sym[i] = x0809_shiftcapslock_sym[i] ;
                    }
                }
            }
            break;

        case 0x080c: // French Belgium
        {
        const KeyLayout_t x080c_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x26,    0xe9,    0x22,    0x27,    0x28,    0x2d,
        0xe8,    0x5f,    0xe7,    0xe0,    0x29,    0x3d,  KS_Bksp,  KS_Tab,
        0x61,    0x7a,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,  0xfe52,    0x24,  KS_Ret,  KS_Ctrl_L,    0x71,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x6d,
        0xf9,    0xb2,  KS_Shift_L,    0x2a,    0x77,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x2c,    0x3b,    0x3a,    0x21,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x080c_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0xb0,    0x2b,  KS_Bksp,  0xfe20,
        0x41,    0x5a,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,  0xfe57,    0xa3,  KS_Ret,  KS_Ctrl_L,    0x51,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x4d,
        0x25,    0x7e,  KS_Shift_L,    0xb5,    0x57,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x3f,    0x2e,    0x2f,    0xa7,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };
        const KeyLayout_t x080c_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0xb9,    0x7e,    0x23,    0x7b,    0x5b,    0x7c,
        0x60,    0x5c,    0x5e,    0x40,    0x5d,    0x7d,  KS_Bksp,  KS_Tab,
        0xe6,    0xab,  0x20ac,    0xb6,   0x3bc,   0x8fb,   0x8fe,   0x8fd,
        0xf8,    0xfe,  0xfe57,    0xa4,  KS_Ret,  KS_Ctrl_L,    0x40,    0xdf,
        0xf0,   0x1f0,   0x3bf,   0x2b1,    0x6a,   0x3a2,   0x1b3,    0xb5,
        0xfe52,    0xac,  KS_Shift_L,  0xfe50,   0x1b3,    0xbb,    0xa2,   0xad2,
        0xad3,    0x6e,  0xfe51,   0x8a3,    0xb7,  0xfe60,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x080c_capslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x26,    0xc9,    0x22,    0x27,    0x28,    0x2d,
        0xc8,    0x5f,    0xc7,    0xc0,    0x29,    0x3d,  KS_Bksp,  KS_Tab,
        0x41,    0x5a,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,  0xfe52,    0x24,  KS_Ret,  KS_Ctrl_L,    0x51,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x4d,
        0xd9,    0xb2,  KS_Shift_L,    0x2a,    0x57,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x2c,    0x3b,    0x3a,    0x21,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x080c_shiftcapslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0xb0,    0x2b,  KS_Bksp,  0xfe20,
        0x61,    0x7a,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,  0xfe57,    0xa3,  KS_Ret,  KS_Ctrl_L,    0x71,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x6d,
        0x25,    0x7e,  KS_Shift_L,   0x39c,    0x77,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x3f,    0x2e,    0x2f,    0xa7,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };

                for(size_t i = 0 ; i < 128 ; i++) {
                    if (x080c_noshift_sym[i]){
                        keylayout_WORK_noshift_sym[i] = x080c_noshift_sym[i] ;
                    }
                    if (x080c_shift_sym[i]){
                        keylayout_WORK_shift_sym[i] = x080c_shift_sym[i] ;
                    }
                    if (x080c_altgr_sym[i]){
                        keylayout_WORK_altgr_sym[i] = x080c_altgr_sym[i] ;
                    }
                    if (x080c_capslock_sym[i]){
                        keylayout_WORK_capslock_sym[i] = x080c_capslock_sym[i] ;
                    }
                    if (x080c_shiftcapslock_sym[i]){
                        keylayout_WORK_shiftcapslock_sym[i] = x080c_shiftcapslock_sym[i] ;
                    }
                }
            }
            break;

        case 0x0813: // Dutch Belgium
        {
        const KeyLayout_t x0813_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x26,    0xe9,    0x22,    0x27,    0x28,    0x2d,
        0xe8,    0x21,    0xe7,    0xe0,    0x29,    0x2d,  KS_Bksp,  KS_Tab,
        0x61,    0x7a,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,  0xfe52,    0x24,  KS_Ret,  KS_Ctrl_L,    0x71,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x6d,
        0xf9,    0xb2,  KS_Shift_L,    0x2a,    0x77,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x2c,    0x3b,    0x3a,    0x3d,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0813_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0xb0,    0x5f,  KS_Bksp,  0xfe20,
        0x41,    0x5a,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,  0xfe57,    0xa3,  KS_Ret,  KS_Ctrl_L,    0x51,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x4d,
        0x25,    0x7e,  KS_Shift_L,    0xb5,    0x57,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x3f,    0x2e,    0x2f,    0x2b,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };
        const KeyLayout_t x0813_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0xb9,    0x40,    0x23,    0x7b,    0x5b,    0x5e,
        0x0,     0x0,    0x7b,    0x7d,     0x0,     0x0,  KS_Bksp,  KS_Tab,
        0xe6,    0xab,  0x20ac,    0xb6,   0x3bc,   0x8fb,   0x8fe,   0x8fd,
        0xf8,    0xfe,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0x40,    0xdf,
        0xf0,   0x1f0,   0x3bf,   0x2b1,    0x6a,   0x3a2,   0x1b3,    0xb5,
        0x27,    0x60,  KS_Shift_L,  0xfe50,   0x1b3,    0xbb,    0xa2,   0xad2,
        0xad3,    0x6e,  0xfe51,   0x8a3,    0xb7,    0x7e,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0813_capslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x26,    0xc9,    0x22,    0x27,    0x28,    0x2d,
        0xc8,    0x5f,    0xc7,    0xc0,    0x29,    0x3d,  KS_Bksp,  KS_Tab,
        0x41,    0x5a,    0x45,    0x52,    0x54,    0x59,    0x55,    0x49,
        0x4f,    0x50,  0xfe52,    0x24,  KS_Ret,  KS_Ctrl_L,    0x51,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x4d,
        0xd9,    0xb2,  KS_Shift_L,    0x2a,    0x57,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x2c,    0x3b,    0x3a,    0x21,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x0813_shiftcapslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0xb0,    0x2b,  KS_Bksp,  0xfe20,
        0x61,    0x7a,    0x65,    0x72,    0x74,    0x79,    0x75,    0x69,
        0x6f,    0x70,  0xfe57,    0xa3,  KS_Ret,  KS_Ctrl_L,    0x71,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0x6d,
        0x25,    0x7e,  KS_Shift_L,   0x39c,    0x77,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x3f,    0x2e,    0x2f,    0xa7,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffae,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };

                for(size_t i = 0 ; i < 128 ; i++) {
                    if (x0813_noshift_sym[i]){
                        keylayout_WORK_noshift_sym[i] = x0813_noshift_sym[i] ;
                    }
                    if (x0813_shift_sym[i]){
                        keylayout_WORK_shift_sym[i] = x0813_shift_sym[i] ;
                    }
                    if (x0813_altgr_sym[i]){
                        keylayout_WORK_altgr_sym[i] = x0813_altgr_sym[i] ;
                    }
                    if (x0813_capslock_sym[i]){
                        keylayout_WORK_capslock_sym[i] = x0813_capslock_sym[i] ;
                    }
                    if (x0813_shiftcapslock_sym[i]){
                        keylayout_WORK_shiftcapslock_sym[i] = x0813_shiftcapslock_sym[i] ;
                    }
                }
            }
            break;

        case 0x100c: // French Swizerland
        {
        const KeyLayout_t x100c_noshift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0x27,    0x3d,  KS_Bksp,  KS_Tab,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x7a,    0x75,    0x69,
        0x6f,    0x70,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0xf6,
        0xe4,    0x5f,  KS_Shift_L,    0x24,    0x79,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x2c,    0x2e,    0x2d,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x100c_shift_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x2b,    0x22,    0x2a,     0x0,    0x25,    0x26,
        0x2f,    0x28,    0x29,    0x3d,    0x3f,  0xfe50,  KS_Bksp,  0xfe20,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x5a,    0x55,    0x49,
        0x4f,    0x50,    0x7b,    0x21,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0x3a,
        0x22,     0x0,     0x0,    0x23,    0x5a,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x3b,    0x3a,    0x5f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffac,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };
        const KeyLayout_t x100c_altgr_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x7c,    0x40,    0x23,     0x0,     0x0,     0x0,
        0x0,    0x7c,     0x0,    0x5d,    0x60,    0x7e,  KS_Bksp,  KS_Tab,
        0x40,   0x1b3,  0x20ac,    0xb6,   0x3bc,   0x8fb,   0x8fe,   0x8fd,
        0x0,     0x0,    0x5b,    0x5d,  KS_Ret,  KS_Ctrl_L,    0xe6,    0xdf,
        0xf0,   0x1f0,   0x3bf,   0x2b1,    0x6a,   0x3a2,   0x1b3,  0xfe59,
        0x7b,    0xac,  KS_Shift_L,    0x7d,    0xab,    0xbb,    0xa2,   0xad2,
        0xad3,    0x6e,    0xb5,   0x8a3,    0xb7,  0xfe60,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x7c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,     0x0,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x100c_capslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x31,    0x32,    0x33,    0x34,    0x35,    0x36,
        0x37,    0x38,    0x39,    0x30,    0xdf,  0xfe51,  KS_Bksp,  KS_Tab,
        0x51,    0x57,    0x45,    0x52,    0x54,    0x5a,    0x55,    0x49,
        0x4f,    0x50,    0xdc,    0x2b,  KS_Ret,  KS_Ctrl_L,    0x41,    0x53,
        0x44,    0x46,    0x47,    0x48,    0x4a,    0x4b,    0x4c,    0xd6,
        0xc4,  0xfe52,  KS_Shift_L,    0x23,    0x59,    0x58,    0x43,    0x56,
        0x42,    0x4e,    0x4d,    0x2c,    0x2e,    0x2d,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xff7f,  0xff14,  0xff95,
        0xff97,  0xff9a,  0xffad,  0xff96,  0xff9d,  0xff98,  KS_KP_Add,  0xff9c,
        0xff99,  0xff9b,  0xff9e,  0xff9f,     0x0,  0xff7e,    0x3c,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  KS_Alt_Gr,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,     0x0,  KS_KP_Equal,     0x0,
        };
        const KeyLayout_t x100c_shiftcapslock_sym = {
        0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,     0x0,
        0x0,  KS_Esc,    0x21,    0x22,    0xa7,    0x24,    0x25,    0x26,
        0x2f,    0x28,    0x29,    0x3d,    0x3f,  0xfe50,  KS_Bksp,  0xfe20,
        0x71,    0x77,    0x65,    0x72,    0x74,    0x7a,    0x75,    0x69,
        0x6f,    0x70,    0xfc,    0x2a,  KS_Ret,  KS_Ctrl_L,    0x61,    0x73,
        0x64,    0x66,    0x67,    0x68,    0x6a,    0x6b,    0x6c,    0xf6,
        0xe4,    0xb0,  KS_Shift_L,    0x27,    0x79,    0x78,    0x63,    0x76,
        0x62,    0x6e,    0x6d,    0x3b,    0x3a,    0x5f,  KS_Shift_R,  KS_KP_Mul,
        KS_Alt_L,    0x20,  KS_Caps_Lock,  0xffbe,  0xffbf,  0xffc0,  0xffc1,  0xffc2,
        0xffc3,  0xffc4,  0xffc5,  0xffc6,  0xffc7,  0xfef9,  0xff14,  KS_KP_7,
        KS_KP_8,  KS_KP_9,  0xffad,  KS_KP_4,  KS_KP_5,  KS_KP_6,  KS_KP_Add,  KS_KP_1,
        KS_KP_2,  KS_KP_3,  KS_KP_0,  0xffac,     0x0,  0xff7e,    0x3e,  0xffc8,
        0xffc9,  KS_Home,  KS_Up,  KS_Prior,  KS_Left,     0x0,  KS_Right,  KS_End,
        KS_Down,  KS_Next,  KS_Ins,  KS_Del,  KS_KP_Enter,  KS_Ctrl_R,  KS_Pause,  KS_Print,
        0xffaf,  0xfe03,     0x0,  KS_Win_L,  KS_Win_R,  KS_Menu,     0x0,     0x0,
        0x0,     0x0,     0x0,     0x0,  0xfe03,  KS_Alt_L,  KS_KP_Equal,  KS_Win_L,
        };

                for(size_t i = 0 ; i < 128 ; i++) {
                    if (x100c_noshift_sym[i]){
                        keylayout_WORK_noshift_sym[i] = x100c_noshift_sym[i] ;
                    }
                    if (x100c_shift_sym[i]){
                        keylayout_WORK_shift_sym[i] = x100c_shift_sym[i] ;
                    }
                    if (x100c_altgr_sym[i]){
                        keylayout_WORK_altgr_sym[i] = x100c_altgr_sym[i] ;
                    }
                    if (x100c_capslock_sym[i]){
                        keylayout_WORK_capslock_sym[i] = x100c_capslock_sym[i] ;
                    }
                    if (x100c_shiftcapslock_sym[i]){
                        keylayout_WORK_shiftcapslock_sym[i] = x100c_shiftcapslock_sym[i] ;
                    }
                }
            }
            break;

        default:
            break;
    }

} // KeymapSym::init_layout

