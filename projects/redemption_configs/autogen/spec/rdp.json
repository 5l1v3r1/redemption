{
  "sections": [
    {
      "name": "general",
      "members": [
        {
          "name": "transformation_rule",
          "type": "string",
          "default": "",
          "description": "Secondary login Transformation rule\n${LOGIN} will be replaced by login\n${DOMAIN} (optional) will be replaced by domain if it exists.\nEmpty value means no transformation rule."
        },
        {
          "name": "vault_transformation_rule",
          "type": "string",
          "default": "",
          "description": "Account Mapping password retriever\nTransformation to apply to find the correct account.\n${USER} will be replaced by the user's login.\n${DOMAIN} will be replaced by the user's domain (in case of LDAP mapping).\n${USER_DOMAIN} will be replaced by the user's login + \"@\" + user's domain (or just user's login if there's no domain).\n${GROUP} will be replaced by the authorization's user group.\n${DEVICE} will be replaced by the device's name.\nA regular expression is allowed to transform a variable, with the syntax: ${USER:/regex/replacement}, groups can be captured with parentheses and used with \\1, \\2, ...\nFor example to replace leading \"A\" by \"B\" in the username: ${USER:/^A/B}\nEmpty value means no transformation rule."
        }
      ]
    },
    {
      "name": "session",
      "members": [
        {
          "name": "inactivity_timeout",
          "type": "integer",
          "min": 0,
          "default": 0,
          "subtype": "duration",
          "unit": "s",
          "description": "No traffic auto disconnection.\nIf value is 0, global value (session_timeout) is used."
        }
      ]
    },
    {
      "name": "session_log",
      "members": [
        {
          "name": "keyboard_input_masking_level",
          "type": "option",
          "default": 2,
          "values": [
            {
               "value": 0,
               "label": "Unmasked",
               "description": "keyboard input are not masked"
            },
            {
               "value": 1,
               "label": "Password only",
               "description": "only passwords are masked"
            },
            {
               "value": 2,
               "label": "Password and unidentified",
               "description": "passwords and unidentified texts are masked"
            },
            {
               "value": 3,
               "label": "Fully masked",
               "description": "keyboard inputs are not logged"
            }
          ],
          "description": "Keyboard Input Masking Level:"
        }
      ]
    },
    {
      "name": "rdp",
      "members": [
        {
          "name": "disabled_orders",
          "type": "integer",
          "min": 0,
          "multivalue": true,
          "default": [],
          "advanced": true,
          "description": "Disables supported drawing orders:\n   0: DstBlt\n   1: PatBlt\n   2: ScrBlt\n   3: MemBlt\n   4: Mem3Blt\n   8: LineTo\n  15: MultiDstBlt\n  16: MultiPatBlt\n  17: MultiScrBlt\n  18: MultiOpaqueRect\n  22: Polyline\n  25: EllipseSC\n  27: GlyphIndex\n"
        },
        {
          "name": "enable_nla",
          "type": "bool",
          "default": true,
          "description": "NLA authentication in secondary target."
        },
        {
          "name": "enable_kerberos",
          "type": "bool",
          "default": false,
          "description": "If enabled, NLA authentication will try Kerberos before NTLM.\n(if enable_nla is disabled, this value is ignored)."
        },
        {
          "name": "tls_min_level",
          "type": "integer",
          "min": 0,
          "default": 0,
          "description": "Minimal incoming TLS level 0=TLSv1, 1=TLSv1.1, 2=TLSv1.2, 3=TLSv1.3"
        },
        {
          "name": "tls_max_level",
          "type": "integer",
          "min": 0,
          "default": 0,
          "description": "Maximal incoming TLS level 0=no restriction, 1=TLSv1.1, 2=TLSv1.2, 3=TLSv1.3"
        },
        {
          "name": "cipher_string",
          "type": "string",
          "default": "ALL",
          "description": "TLSv1.2 additional ciphers supported by client, default is empty to apply system-wide configuration (SSL security level 2), ALL for support of all ciphers to ensure highest compatibility with target servers."
        },
        {
          "name": "show_common_cipher_list",
          "type": "bool",
          "default": false,
          "description": "Show common cipher list supported by client and server"
        },
        {
          "name": "allowed_dynamic_channels",
          "type": "string",
          "default": "*",
          "advanced": true,
          "description": "List of enabled dynamic virtual channel (example: channel1,channel2,etc). Character * only, activate all."
        },
        {
          "name": "denied_dynamic_channels",
          "type": "string",
          "default": "",
          "advanced": true,
          "description": "List of disabled dynamic virtual channel (example: channel1,channel2,etc). Character * only, deactivate all."
        },
        {
          "name": "server_redirection",
          "type": "bool",
          "default": false,
          "description": "Enables Server Redirection Support."
        },
        {
          "name": "load_balance_info",
          "type": "string",
          "default": "",
          "description": "Load balancing information"
        },
        {
          "name": "use_client_provided_alternate_shell",
          "type": "bool",
          "default": false,
          "description": "As far as possible, use client-provided initial program (Alternate Shell)"
        },
        {
          "name": "use_client_provided_remoteapp",
          "type": "bool",
          "default": false,
          "description": "As far as possible, use client-provided remote program (RemoteApp)"
        },
        {
          "name": "use_native_remoteapp_capability",
          "type": "bool",
          "default": true,
          "description": "As far as possible, use native RemoteApp capability"
        },
        {
          "name": "wabam_uses_translated_remoteapp",
          "type": "bool",
          "default": false,
          "description": ""
        },
        {
          "name": "enable_remotefx",
          "type": "bool",
          "default": false,
          "description": "Enables support of the remoteFX codec."
        },
        {
          "name": "enable_restricted_admin_mode",
          "type": "bool",
          "default": false,
          "description": "Connect to the server in Restricted Admin mode.\nThis mode must be supported by the server (available from Windows Server 2012 R2), otherwise, connection will fail.\nNLA must be enabled."
        },
        {
          "name": "force_smartcard_authentication",
          "type": "bool",
          "default": false,
          "description": "NLA will be disabled.\nTarget must be set for interactive login, otherwise server connection may not be guaranteed.\nSmartcard device must be available on client desktop.\nSmartcard redirection (Proxy option RDP_SMARTCARD) must be enabled on service."
        },
        {
          "name": "enable_ipv6",
          "type": "bool",
          "default": false,
          "description": "Enable target connection on ipv6"
        },
        {
          "name": "mode_console",
          "type": "option",
          "default": "allow",
          "values": [
            {
               "value": "allow",
               "label": "Allow",
               "description": "Forward Console mode request from client to the target."
            },
            {
               "value": "force",
               "label": "Force",
               "description": "Force Console mode on target regardless of client request."
            },
            {
               "value": "forbid",
               "label": "Forbid",
               "description": "Block Console mode request from client."
            }
          ],
          "description": "Console mode management for targets on Windows Server 2003 (requested with /console or /admin mstsc option)"
        },
        {
          "name": "remote_programs_disconnect_message_delay",
          "type": "integer",
          "min": 3000,
          "max": 120000,
          "default": 3000,
          "advanced": true,
          "description": "Delay before showing disconnect message after the last RemoteApp window is closed."
        },
        {
          "name": "use_session_probe_to_launch_remote_program",
          "type": "bool",
          "default": true,
          "description": "Use Session Probe to launch Remote Program as much as possible."
        }
      ]
    },
    {
      "name": "session_probe",
      "members": [
        {
          "name": "enable_session_probe",
          "type": "bool",
          "default": true,
          "description": ""
        },
        {
          "name": "use_smart_launcher",
          "type": "bool",
          "default": true,
          "description": "Minimum supported server : Windows Server 2008.\nClipboard redirection should be remain enabled on Terminal Server."
        },
        {
          "name": "enable_launch_mask",
          "type": "bool",
          "default": true,
          "advanced": true,
          "description": ""
        },
        {
          "name": "on_launch_failure",
          "type": "option",
          "default": 1,
          "values": [
            {
               "value": 0,
               "label": "Ignore and continue",
               "description": "ignore failure and continue."
            },
            {
               "value": 1,
               "label": "Disconnect user",
               "description": "disconnect user."
            },
            {
               "value": 2,
               "label": "Retry without session probe",
               "description": "reconnect without Session Probe."
            }
          ],
          "description": "Behavior on failure to launch Session Probe."
        },
        {
          "name": "launch_timeout",
          "type": "integer",
          "min": 0,
          "max": 300000,
          "default": 40000,
          "advanced": true,
          "description": "This parameter is used if session_probe_on_launch_failure is 1 (disconnect user).\n0 to disable timeout."
        },
        {
          "name": "launch_fallback_timeout",
          "type": "integer",
          "min": 0,
          "max": 300000,
          "default": 10000,
          "advanced": true,
          "description": "This parameter is used if session_probe_on_launch_failure is 0 (ignore failure and continue) or 2 (reconnect without Session Probe).\n0 to disable timeout."
        },
        {
          "name": "start_launch_timeout_timer_only_after_logon",
          "type": "bool",
          "default": true,
          "description": "Minimum supported server : Windows Server 2008."
        },
        {
          "name": "keepalive_timeout",
          "type": "integer",
          "min": 0,
          "max": 60000,
          "default": 5000,
          "advanced": true,
          "description": ""
        },
        {
          "name": "on_keepalive_timeout",
          "type": "option",
          "default": 1,
          "values": [
            {
               "value": 0,
               "label": "Ignore and continue",
               "description": ""
            },
            {
               "value": 1,
               "label": "Disconnect user",
               "description": ""
            },
            {
               "value": 2,
               "label": "Freeze connection and wait",
               "description": ""
            }
          ],
          "description": ""
        },
        {
          "name": "end_disconnected_session",
          "type": "bool",
          "default": false,
          "description": "End automatically a disconnected session.\nSession Probe must be enabled to use this feature."
        },
        {
          "name": "enable_log",
          "type": "bool",
          "default": false,
          "advanced": true,
          "description": ""
        },
        {
          "name": "enable_log_rotation",
          "type": "bool",
          "default": true,
          "advanced": true,
          "description": ""
        },
        {
          "name": "log_level",
          "type": "option",
          "default": 5,
          "values": [
            {
               "value": 0,
               "label": "Off",
               "description": ""
            },
            {
               "value": 1,
               "label": "Fatal",
               "description": ""
            },
            {
               "value": 2,
               "label": "Error",
               "description": ""
            },
            {
               "value": 3,
               "label": "Info",
               "description": ""
            },
            {
               "value": 4,
               "label": "Warning",
               "description": ""
            },
            {
               "value": 5,
               "label": "Debug",
               "description": ""
            },
            {
               "value": 6,
               "label": "Detail",
               "description": ""
            }
          ],
          "advanced": true,
          "description": ""
        },
        {
          "name": "disconnected_application_limit",
          "type": "integer",
          "min": 0,
          "max": 172800000,
          "default": 0,
          "advanced": true,
          "description": "This policy setting allows you to configure a time limit for disconnected application sessions.\n0 to disable timeout."
        },
        {
          "name": "disconnected_session_limit",
          "type": "integer",
          "min": 0,
          "max": 172800000,
          "default": 0,
          "advanced": true,
          "description": "This policy setting allows you to configure a time limit for disconnected Terminal Services sessions.\n0 to disable timeout."
        },
        {
          "name": "idle_session_limit",
          "type": "integer",
          "min": 0,
          "max": 172800000,
          "default": 0,
          "advanced": true,
          "description": "This parameter allows you to specify the maximum amount of time that an active Terminal Services session can be idle (without user input) before it is automatically locked by Session Probe.\n0 to disable timeout."
        },
        {
          "name": "smart_launcher_clipboard_initialization_delay",
          "type": "integer",
          "min": 0,
          "default": 2000,
          "subtype": "duration",
          "unit": "ms",
          "advanced": true,
          "description": ""
        },
        {
          "name": "smart_launcher_start_delay",
          "type": "integer",
          "min": 0,
          "default": 0,
          "subtype": "duration",
          "unit": "ms",
          "advanced": true,
          "description": ""
        },
        {
          "name": "smart_launcher_long_delay",
          "type": "integer",
          "min": 0,
          "default": 500,
          "subtype": "duration",
          "unit": "ms",
          "advanced": true,
          "description": ""
        },
        {
          "name": "smart_launcher_short_delay",
          "type": "integer",
          "min": 0,
          "default": 50,
          "subtype": "duration",
          "unit": "ms",
          "advanced": true,
          "description": ""
        },
        {
          "name": "launcher_abort_delay",
          "type": "integer",
          "min": 0,
          "max": 300000,
          "default": 2000,
          "advanced": true,
          "description": ""
        },
        {
          "name": "enable_crash_dump",
          "type": "bool",
          "default": false,
          "advanced": true,
          "description": ""
        },
        {
          "name": "handle_usage_limit",
          "type": "integer",
          "min": 0,
          "max": 1000,
          "default": 0,
          "advanced": true,
          "description": ""
        },
        {
          "name": "memory_usage_limit",
          "type": "integer",
          "min": 0,
          "max": 200000000,
          "default": 0,
          "advanced": true,
          "description": ""
        },
        {
          "name": "end_of_session_check_delay_time",
          "type": "integer",
          "min": 0,
          "max": 60000,
          "default": 0,
          "advanced": true,
          "description": ""
        },
        {
          "name": "ignore_ui_less_processes_during_end_of_session_check",
          "type": "bool",
          "default": true,
          "advanced": true,
          "description": ""
        },
        {
          "name": "update_disabled_features",
          "type": "bool",
          "default": true,
          "advanced": true,
          "description": ""
        },
        {
          "name": "childless_window_as_unidentified_input_field",
          "type": "bool",
          "default": true,
          "advanced": true,
          "description": ""
        },
        {
          "name": "disabled_features",
          "type": "integer",
          "min": 0,
          "max": 511,
          "default": 352,
          "subtype": "bitset",
          "values": [
            {
               "value": 0,
               "label": "None",
               "description": ""
            },
            {
               "value": 1,
               "label": "Jab",
               "description": "Java Access Bridge"
            },
            {
               "value": 2,
               "label": "Msaa",
               "description": "MS Active Accessbility"
            },
            {
               "value": 4,
               "label": "Msuia",
               "description": "MS UI Automation"
            },
            {
               "value": 16,
               "label": "Edge inspection",
               "description": "Inspect Edge location URL"
            },
            {
               "value": 32,
               "label": "Chrome inspection",
               "description": "Inspect Chrome Address/Search bar"
            },
            {
               "value": 64,
               "label": "Firefox inspection",
               "description": "Inspect Firefox Address/Search bar"
            },
            {
               "value": 128,
               "label": "Ie monitoring",
               "description": "Monitor Internet Explorer event"
            },
            {
               "value": 256,
               "label": "Group membership",
               "description": "Inspect group membership of user"
            }
          ],
          "advanced": true,
          "prefered_representation": "hex",
          "description": ""
        },
        {
          "name": "enable_bestsafe_interaction",
          "type": "bool",
          "default": false,
          "description": ""
        },
        {
          "name": "alternate_directory_environment_variable",
          "type": "string",
          "maxlen": 3,
          "default": "",
          "advanced": true,
          "description": "The name of the environment variable pointing to the alternative directory to launch Session Probe.\nIf empty, the environment variable TMP will be used."
        },
        {
          "name": "public_session",
          "type": "bool",
          "default": false,
          "description": "If enabled, disconnected session can be recovered by a different primary user."
        },
        {
          "name": "on_account_manipulation",
          "type": "option",
          "default": 0,
          "values": [
            {
               "value": 0,
               "label": "Allow",
               "description": "User action will be accepted"
            },
            {
               "value": 1,
               "label": "Notify",
               "description": "(Same thing as 'allow') "
            },
            {
               "value": 2,
               "label": "Deny",
               "description": "User action will be rejected"
            }
          ],
          "description": "For targets running WALLIX BestSafe only."
        },
        {
          "name": "auto_reconnection_on_losing_target_link",
          "type": "bool",
          "default": false,
          "advanced": true,
          "description": ""
        },
        {
          "name": "outbound_connection_monitoring_rules",
          "type": "string",
          "default": "",
          "description": "Comma-separated rules (Ex.: $deny:192.168.0.0/24:*,$allow:host.domain.net:3389,$allow:192.168.0.110:*)\n(Ex. for backwards compatibility only: 10.1.0.0/16:22)\nSession Probe must be enabled to use this feature."
        },
        {
          "name": "process_monitoring_rules",
          "type": "string",
          "default": "",
          "description": "Comma-separated rules (Ex.: $deny:Taskmgr)\n@ = All child processes of Bastion Application (Ex.: $deny:@)\nSession Probe must be enabled to use this feature."
        },
        {
          "name": "extra_system_processes",
          "type": "string",
          "default": "",
          "description": "Comma-separated extra system processes (Ex.: dllhos.exe,TSTheme.exe)"
        },
        {
          "name": "windows_of_these_applications_as_unidentified_input_field",
          "type": "string",
          "default": "",
          "description": "Comma-separated processes (Ex.: chrome.exe,ngf.exe)"
        }
      ]
    },
    {
      "name": "server_cert",
      "members": [
        {
          "name": "server_cert_store",
          "type": "bool",
          "default": true,
          "description": "Keep known server certificates on WAB"
        },
        {
          "name": "server_cert_check",
          "type": "option",
          "default": 1,
          "values": [
            {
               "value": 0,
               "label": "Fails if no match or missing",
               "description": "fails if certificates doesn't match or miss."
            },
            {
               "value": 1,
               "label": "Fails if no match and succeed if no know",
               "description": "fails if certificate doesn't match, succeed if no known certificate."
            },
            {
               "value": 2,
               "label": "Succeed if exists and fails if missing",
               "description": "succeed if certificates exists (not checked), fails if missing."
            },
            {
               "value": 3,
               "label": "Always succeed",
               "description": "always succeed."
            }
          ],
          "description": "Behavior of certificates check."
        },
        {
          "name": "server_access_allowed_message",
          "type": "integer",
          "min": 0,
          "max": 7,
          "default": 1,
          "subtype": "bitset",
          "values": [
            {
               "value": 0,
               "label": "Nobody",
               "description": ""
            },
            {
               "value": 1,
               "label": "Syslog",
               "description": "message sent to syslog"
            },
            {
               "value": 2,
               "label": "User",
               "description": "User notified (through proxy interface)"
            },
            {
               "value": 4,
               "label": "Admin",
               "description": "admin notified (wab notification)"
            }
          ],
          "advanced": true,
          "prefered_representation": "hex",
          "description": "Warn if check allow connexion to server."
        },
        {
          "name": "server_cert_create_message",
          "type": "integer",
          "min": 0,
          "max": 7,
          "default": 1,
          "subtype": "bitset",
          "values": [
            {
               "value": 0,
               "label": "Nobody",
               "description": ""
            },
            {
               "value": 1,
               "label": "Syslog",
               "description": "message sent to syslog"
            },
            {
               "value": 2,
               "label": "User",
               "description": "User notified (through proxy interface)"
            },
            {
               "value": 4,
               "label": "Admin",
               "description": "admin notified (wab notification)"
            }
          ],
          "advanced": true,
          "prefered_representation": "hex",
          "description": "Warn that new server certificate file was created."
        },
        {
          "name": "server_cert_success_message",
          "type": "integer",
          "min": 0,
          "max": 7,
          "default": 1,
          "subtype": "bitset",
          "values": [
            {
               "value": 0,
               "label": "Nobody",
               "description": ""
            },
            {
               "value": 1,
               "label": "Syslog",
               "description": "message sent to syslog"
            },
            {
               "value": 2,
               "label": "User",
               "description": "User notified (through proxy interface)"
            },
            {
               "value": 4,
               "label": "Admin",
               "description": "admin notified (wab notification)"
            }
          ],
          "advanced": true,
          "prefered_representation": "hex",
          "description": "Warn that server certificate file was successfully checked."
        },
        {
          "name": "server_cert_failure_message",
          "type": "integer",
          "min": 0,
          "max": 7,
          "default": 1,
          "subtype": "bitset",
          "values": [
            {
               "value": 0,
               "label": "Nobody",
               "description": ""
            },
            {
               "value": 1,
               "label": "Syslog",
               "description": "message sent to syslog"
            },
            {
               "value": 2,
               "label": "User",
               "description": "User notified (through proxy interface)"
            },
            {
               "value": 4,
               "label": "Admin",
               "description": "admin notified (wab notification)"
            }
          ],
          "advanced": true,
          "prefered_representation": "hex",
          "description": "Warn that server certificate file checking failed."
        }
      ]
    },
    {
      "name": "file_verification",
      "members": [
        {
          "name": "enable_up",
          "type": "bool",
          "default": false,
          "description": "Enable use of ICAP service for file verification on upload."
        },
        {
          "name": "enable_down",
          "type": "bool",
          "default": false,
          "description": "Enable use of ICAP service for file verification on download."
        },
        {
          "name": "clipboard_text_up",
          "type": "bool",
          "default": false,
          "description": "Verify text data via clipboard from client to server.\nFile verification on upload must be enabled via option Enable up."
        },
        {
          "name": "clipboard_text_down",
          "type": "bool",
          "default": false,
          "description": "Verify text data via clipboard from server to client\nFile verification on download must be enabled via option Enable down."
        },
        {
          "name": "block_invalid_file_up",
          "type": "bool",
          "default": false,
          "description": "Block file transfer from client to server on invalid file verification.\nFile verification on upload must be enabled via option Enable up."
        },
        {
          "name": "block_invalid_file_down",
          "type": "bool",
          "default": false,
          "description": "Block file transfer from server to client on invalid file verification.\nFile verification on download must be enabled via option Enable down."
        },
        {
          "name": "log_if_accepted",
          "type": "bool",
          "default": true,
          "advanced": true,
          "description": ""
        },
        {
          "name": "max_file_size_rejected",
          "type": "integer",
          "min": 0,
          "default": 50,
          "advanced": true,
          "description": "If option Block invalid file (up or down) is enabled, automatically reject file with greater filesize (in megabytes).\nWarning: This value affects the RAM used by the session."
        }
      ]
    },
    {
      "name": "file_storage",
      "members": [
        {
          "name": "store_file",
          "type": "option",
          "default": "never",
          "values": [
            {
               "value": "never",
               "label": "Never",
               "description": "Never store transferred files."
            },
            {
               "value": "always",
               "label": "Always",
               "description": "Always store transferred files."
            },
            {
               "value": "on_invalid_verification",
               "label": "On invalid verification",
               "description": "Transferred files are stored only if file verification is invalid. File verification by ICAP service must be enabled (in section file_verification)."
            }
          ],
          "description": "Enable storage of transferred files (via RDP Clipboard)."
        }
      ]
    },
    {
      "name": "video",
      "members": [
        {
          "name": "disable_keyboard_log",
          "type": "integer",
          "min": 0,
          "max": 3,
          "default": 1,
          "subtype": "bitset",
          "values": [
            {
               "value": 0,
               "label": "None",
               "description": ""
            },
            {
               "value": 1,
               "label": "Syslog",
               "description": "keyboard log in syslog"
            },
            {
               "value": 2,
               "label": "Wrm",
               "description": "keyboard log in recorded sessions"
            }
          ],
          "advanced": true,
          "prefered_representation": "hex",
          "description": "Disable keyboard log:\n(Please see also \"Keyboard input masking level\" in \"session_log\" section of \"Connection Policy\".)"
        }
      ]
    }
  ]
}
